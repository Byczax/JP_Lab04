package data.gui.manager;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import data.gui.results.ResultsGui;

import javax.swing.*;
import java.awt.*;

public class ManagerGui {
    private JButton servicesButton;
    private JButton surveysManagementButton;
    private JPanel mainPanel;
    private JButton connectingAndResultsButton;
    private JButton results;

    public ManagerGui() {
        servicesButton.addActionListener(e -> {
            ManagerServiceGui managerGui = new ManagerServiceGui();
            JPanel root = managerGui.getServiceMainPanel();
            JFrame frame = new JFrame();
            managerGui.createTable();
            frame.setTitle("Manager Service Management");
            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            frame.setContentPane(root);
            frame.pack();
            frame.setLocationRelativeTo(null);
            frame.setVisible(true);

        });
        surveysManagementButton.addActionListener(e -> {
            ManagerSurveysGui managerGui = new ManagerSurveysGui();
            JPanel root = managerGui.getMainSurveyPanel();
            JFrame frame = new JFrame();
            managerGui.createTable();
            frame.setTitle("Manager Surveys Management");
            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            frame.setContentPane(root);
            frame.pack();
            frame.setLocationRelativeTo(null);
            frame.setVisible(true);
        });
        connectingAndResultsButton.addActionListener(e -> {
            ManagerConnectGui managerGui = new ManagerConnectGui();
            JPanel root = managerGui.getMainConnectPanel();
            JFrame frame = new JFrame();
            managerGui.createServiceTable();
            managerGui.createSurveyTable();
            frame.setTitle("Manager Connection Management");
            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            frame.setContentPane(root);
            frame.pack();
            frame.setLocationRelativeTo(null);
            frame.setVisible(true);
        });
        results.addActionListener(e -> {
            ResultsGui resultsGui = new ResultsGui();
            JPanel root = resultsGui.getMainPanel();
            JFrame frame = new JFrame();
            resultsGui.createTable();
            frame.setTitle("Surveys results");
            frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            frame.setContentPane(root);
            frame.pack();
            frame.setLocationRelativeTo(null);
            frame.setMinimumSize(new Dimension(300, 300));
            frame.setVisible(true);
        });
    }

    public JPanel getMainPanel() {
        return mainPanel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(5, 1, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(panel1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        servicesButton = new JButton();
        servicesButton.setText("Services management");
        panel1.add(servicesButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        surveysManagementButton = new JButton();
        surveysManagementButton.setText("Surveys management");
        panel1.add(surveysManagementButton, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        connectingAndResultsButton = new JButton();
        connectingAndResultsButton.setText("Conecting surveys to services");
        panel1.add(connectingAndResultsButton, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Choose option below");
        panel1.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        results = new JButton();
        results.setText("Browse the results");
        panel1.add(results, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
